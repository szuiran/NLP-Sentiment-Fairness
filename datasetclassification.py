# -*- coding: utf-8 -*-
"""DatasetClassification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Yz7mykU_k7F6KublYoyCOKZi05X_bKCx
"""

# 1Ô∏è‚É£ Install & Import Dependencies
!pip install -q transformers datasets
import collections
import matplotlib.pyplot as plt
import pandas as pd
import json
from datasets import load_dataset

# Set consistent plot style
plt.style.use('ggplot')

# 2Ô∏è‚É£ Load SST-2 Dataset
sst_dataset = load_dataset("glue", "sst2")

# 3Ô∏è‚É£ Check SST-2 Label Distribution
def check_sst2_distribution():
    train_labels = [example["label"] for example in sst_dataset["train"]]
    val_labels = [example["label"] for example in sst_dataset["validation"]]

    train_label_counts = collections.Counter(train_labels)
    val_label_counts = collections.Counter(val_labels)

    print("üìä SST-2 Train Label Distribution:", train_label_counts)
    print("üìä SST-2 Validation Label Distribution:", val_label_counts)

    # Plot SST-2 imbalance
    plt.figure(figsize=(6,4))
    plt.bar(train_label_counts.keys(), train_label_counts.values(), color=['blue', 'red'])
    plt.xticks([0, 1], ["Negative", "Positive"])
    plt.xlabel("Sentiment Labels")
    plt.ylabel("Count")
    plt.title("SST-2 Sentiment Class Distribution")
    plt.show()

# Run SST-2 analysis
check_sst2_distribution()

# 4Ô∏è‚É£ Clone & Load CALM Dataset
!git clone https://huggingface.co/datasets/vipulgupta/CALM

# Load Gender dataset
gender_file_path = "CALM/data/gender_datasets/sentiment_gender_dataset.jsonl"
gender_data = [json.loads(line) for line in open(gender_file_path, "r")]
gender_df = pd.DataFrame(gender_data)

# Load Race dataset
race_file_path = "CALM/data/race_datasets/sentiment_race_dataset.jsonl"
race_data = [json.loads(line) for line in open(race_file_path, "r")]
race_df = pd.DataFrame(race_data)

# Drop duplicates & missing values
gender_df = gender_df.drop_duplicates().dropna(subset=["gender", "sentence"])
race_df = race_df.drop_duplicates().dropna(subset=["race", "sentence"])

# 5Ô∏è‚É£ Check CALM Gender & Race Distribution
def check_calm_distribution():
    # Gender distribution
    gender_counts = gender_df["gender"].value_counts()
    print("\nüìä Gender Label Distribution:\n", gender_counts)

    # Race distribution
    race_counts = race_df["race"].value_counts()
    print("\nüìä Race Label Distribution:\n", race_counts)

    # Plot Gender Distribution
    plt.figure(figsize=(6,4))
    gender_counts.plot(kind="bar", color=['purple', 'green', 'orange'])
    plt.xlabel("Gender Labels")
    plt.ylabel("Count")
    plt.title("Gender Distribution in CALM")
    plt.show()

    # Plot Race Distribution
    plt.figure(figsize=(6,4))
    race_counts.plot(kind="bar", color=['blue', 'red', 'yellow', 'green'])
    plt.xlabel("Race Labels")
    plt.ylabel("Count")
    plt.title("Race Distribution in CALM")
    plt.show()

# Run CALM analysis
check_calm_distribution()